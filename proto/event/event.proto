syntax = "proto3";

package event;

import "google/api/annotations.proto";

option go_package = "proto/event";

message Event {
	uint32 id = 1;
	string event_name = 2;
	string event_description = 3;
	string start_at = 4;
	string end_at = 5;
	string main_image_url = 6;
	string register_start_dt = 7;
	string register_close_dt = 8;
	string created_at = 9;
	string updated_at = 10;
}

message CreateEventRequest {
	string event_name = 1;
	string event_description = 2;
	string start_at = 3;
	string end_at = 4;
	string main_image_url = 5;
	string register_start_dt = 6;
	string register_close_dt = 7;
}

message CreateEventResponse {
  Event event = 1;
}

message FindEventByIDRequest {
  uint32 id = 1;
}

message FindEventByIDResponse {
  Event event = 1;
}

message FindAllEventsRequest {}

message FindAllEventsResponse {
  repeated Event events = 1;
}

message PatchEventRequest {
	uint32 id = 1;
  string event_name = 2;
	string event_description = 3;
	string start_at = 4;
	string end_at = 5;
	string main_image_url = 6;
	string register_start_dt = 7;
	string register_close_dt = 8;
}

message PatchEventResponse {
  Event event = 1;
}

message DeleteEventRequest {
  uint32 id = 1;
}

message DeleteEventResponse {
  string message = 1;
}

service EventService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse){
    option (google.api.http) = {
      post: "/api/v1/events"
      body: "*"
    };
  }
  rpc FindEventByID(FindEventByIDRequest) returns (FindEventByIDResponse){
    option (google.api.http) = {
      get: "/api/v1/events/{id}"
    };
  }
  rpc FindAllEvents(FindAllEventsRequest) returns (FindAllEventsResponse){
    option (google.api.http) = {
      get: "/api/v1/events"
    };
  }
  rpc PatchEvent(PatchEventRequest) returns (PatchEventResponse){
    option (google.api.http) = {
      patch: "/api/v1/events/{id}"
      body: "*"
    };
  }
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse){
    option (google.api.http) = {
      delete: "/api/v1/events/{id}"
    };
  }
}
