{
  "swagger": "2.0",
  "info": {
    "title": "proto/event/event.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/events": {
      "get": {
        "operationId": "EventService_FindAllEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventFindAllEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EventService"
        ]
      },
      "post": {
        "operationId": "EventService_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventCreateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventCreateEventRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "operationId": "EventService_FindEventByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventFindEventByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "delete": {
        "operationId": "EventService_DeleteEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventDeleteEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "patch": {
        "operationId": "EventService_PatchEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventPatchEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventServicePatchEventBody"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    }
  },
  "definitions": {
    "EventServicePatchEventBody": {
      "type": "object",
      "properties": {
        "eventName": {
          "type": "string"
        },
        "eventDescription": {
          "type": "string"
        },
        "startAt": {
          "type": "string"
        },
        "endAt": {
          "type": "string"
        },
        "mainImageUrl": {
          "type": "string"
        },
        "registerStartDt": {
          "type": "string"
        },
        "registerCloseDt": {
          "type": "string"
        }
      }
    },
    "eventCreateEventRequest": {
      "type": "object",
      "properties": {
        "eventName": {
          "type": "string"
        },
        "eventDescription": {
          "type": "string"
        },
        "startAt": {
          "type": "string"
        },
        "endAt": {
          "type": "string"
        },
        "mainImageUrl": {
          "type": "string"
        },
        "registerStartDt": {
          "type": "string"
        },
        "registerCloseDt": {
          "type": "string"
        }
      }
    },
    "eventCreateEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "eventDeleteEventResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "eventEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "eventName": {
          "type": "string"
        },
        "eventDescription": {
          "type": "string"
        },
        "startAt": {
          "type": "string"
        },
        "endAt": {
          "type": "string"
        },
        "mainImageUrl": {
          "type": "string"
        },
        "registerStartDt": {
          "type": "string"
        },
        "registerCloseDt": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "eventFindAllEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/eventEvent"
          }
        }
      }
    },
    "eventFindEventByIDResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "eventPatchEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
