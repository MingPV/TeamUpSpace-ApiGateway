{
  "swagger": "2.0",
  "info": {
    "title": "proto/friend/friend.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FriendService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/friends": {
      "post": {
        "operationId": "FriendService_CreateFriend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/friendCreateFriendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/friendCreateFriendRequest"
            }
          }
        ],
        "tags": [
          "FriendService"
        ]
      }
    },
    "/api/v1/friends/accepted/{userId}/{friendId}": {
      "get": {
        "operationId": "FriendService_AcceptFriend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/friendAcceptFriendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "friendId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FriendService"
        ]
      }
    },
    "/api/v1/friends/ismyfriends/{userId}/{friendId}": {
      "get": {
        "operationId": "FriendService_IsMyFriend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/friendIsMyFriendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "friendId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FriendService"
        ]
      }
    },
    "/api/v1/friends/requested/{userId}": {
      "get": {
        "operationId": "FriendService_FindAllFriendRequests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/friendFindAllFriendRequestsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FriendService"
        ]
      }
    },
    "/api/v1/friends/{id}": {
      "delete": {
        "operationId": "FriendService_DeleteFriend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/friendDeleteFriendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "FriendService"
        ]
      }
    },
    "/api/v1/friends/{userId}": {
      "get": {
        "operationId": "FriendService_FindAllFriendsByIsFriend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/friendFindAllFriendsByIsFriendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FriendService"
        ]
      }
    }
  },
  "definitions": {
    "friendAcceptFriendResponse": {
      "type": "object",
      "properties": {
        "friend": {
          "$ref": "#/definitions/friendFriend"
        }
      }
    },
    "friendCreateFriendRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "friendId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "friendCreateFriendResponse": {
      "type": "object",
      "properties": {
        "friend": {
          "$ref": "#/definitions/friendFriend"
        }
      }
    },
    "friendDeleteFriendResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "friendFindAllFriendRequestsResponse": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/friendFriend"
          }
        }
      }
    },
    "friendFindAllFriendsByIsFriendResponse": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/friendFriend"
          }
        }
      }
    },
    "friendFindAllFriendsByUserIDResponse": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/friendFriend"
          }
        }
      }
    },
    "friendFindAllFriendsResponse": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/friendFriend"
          }
        }
      }
    },
    "friendFriend": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "string"
        },
        "friendId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "friendIsMyFriendResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
