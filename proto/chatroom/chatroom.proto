syntax = "proto3";

package chatroom;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "proto/chatroom";

message Chatroom {
    int32 id = 1;
    string room_name = 2;
    bool is_group = 3;
    string owner = 4;
    google.protobuf.Timestamp created_at = 5;     
    google.protobuf.Timestamp updated_at = 6;   
}

message CreateChatroomRequest {
    string room_name = 1;
    bool is_group = 2;
    string owner = 3;
}

message CreateChatroomResponse {
    Chatroom chatroom = 1;
}

message FindChatroomByIDRequest {
    int32 id = 1;
}

message FindChatroomByIDResponse {
    Chatroom chatroom = 1;
}

message PatchChatroomRequest {
    int32 id = 1;
    string room_name = 2;
    bool is_group = 3;
    string owner = 4;
}

message PatchChatroomResponse {
    Chatroom chatroom = 1;
}

message DeleteChatroomRequest {
    int32 id = 1;
}

message DeleteChatroomResponse {
    string message = 1;
}

service ChatroomService {
    rpc CreateChatroom(CreateChatroomRequest) returns (CreateChatroomResponse){
        option (google.api.http) = {
            post: "/api/v1/chatrooms"
            body: "*"
        };
    }

    rpc FindChatroomByID(FindChatroomByIDRequest) returns (FindChatroomByIDResponse){
        option (google.api.http) = {
            get: "/api/v1/chatrooms/{id}"
        };
    }

    rpc PatchChatroom(PatchChatroomRequest) returns (PatchChatroomResponse){
        option (google.api.http) = {
          patch: "/api/v1/chatrooms"
          body: "*"
        };
    }

    rpc DeleteChatroom(DeleteChatroomRequest) returns (DeleteChatroomResponse){
        option (google.api.http) = {
            delete: "/api/v1/chatrooms/{id}"
        };
    }
}